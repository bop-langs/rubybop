# see http://rake.rubyforge.org/

task :default => ["inst.a"]

c_sources = [ "ary_bitmap.c", "postwait.c", "bop_merge.c", "range_tree/dtree.c", "bop_ppr.c", "utils.c", "external/malloc.c", "bop_ppr_sync.c", "bop_io.c", "bop_ports.c", "bop_ordered.c", "bop_alloc.c" ]
c_flags = ["-g3", "-DBOP", "-I.", '-Wall', '-Wno-unused-function']

objs = FileList.new(c_sources).ext('.o')
headers = Dir.glob("**/*.h")

if RUBY_PLATFORM.include?("darwin")
  platform = "-D__MACH__"
else
  platform = "-D__LINUX__"
end

build_task = file "inst.a" => objs+headers do
  sh "ar r inst.a #{objs * ' '}"
  sh "ranlib inst.a"
end

rule '.o' => ['.c']+headers do |t|
  sh "gcc #{platform} #{c_flags * " "} -c -o #{t.name} #{t.source}"
end

clean_task = task :clean do
  objs.each {|obj| sh "\\rm #{obj}" if File.file?(obj)}
  sh 'rm -f inst.a' if File.file?('inst.a')
end

task :force do
  clean_task.invoke
  build_task.invoke
end

task :overload_malloc do
  clean_task.invoke
  c_flags = c_flags + malloc_extra_flags
  build_task.invoke
end
