task :default => :ruby
test_dir = ['add', 'sleep','str/BOP_strcmp', 'str/BOP_string', 'str/strsub', 'str/strsub2']
task :ruby => :bop do
  #build ruby
  cd "ruby" do
    if (!File.exists?("Makefile")) then
      sh 'autoconf'
      sh './configure --disable-install-doc'
    end
    sh 'make'
  end
end

task :smoke_test do
  cd 'ruby' do
    sh 'make check' if File.exists? 'Makefile'
  end
end

task :bop do
  #build bop
  cd "bop" do
    sh 'make'
  end
end

task :bop_debug do
  cd "bop" do
    sh 'make debug'
  end
end

task :ruby_test => :ruby do
  ENV["BOP_Verbose"]=0.to_s
  cd "ruby" do
		sh './rubybop --disable-gems ./bootstraptest/runner.rb' do |ok, res|
			if ! ok then
         fail "Ruby tests failed with exit code = #{res.exitstatus}"
      end
    end
  end
	puts "Finished running all tests"
end

task :bop_test => :bop do
  test_dir.each do |dir|
		cd 'tests/' + dir do
			sh 'rake; rake run' do |ok, res|
        if ! ok then
          fail "bop tests failed status: #{res.exitstatus}"
        end
	  	end
    end
  end
  puts "Finished running all tests"
end

task :test do
  Rake::Task[:bop_test].invoke
  Rake::Task[:ruby_test].invoke
end

task :nuke do
	sh 'git clean -xfd'
end
task :clean do
	cd "ruby" do
		if(File.exists?("Makefile")) then
			sh 'make clean'
		end
	end
  cd "bop" do
    sh 'make clean'
  end
  test_dir.each do |dir|
    cd "tests/" + dir do
      sh 'rake clean'
    end
  end
end
task :again do
	Rake::Task[:clean].invoke
	Rake::Task[:default].invoke
end
task :install => :ruby do
  cd "ruby" do
    sh 'make install' do |ok, res| end
  end
end
task :uninstall do
  sh 'make -C ruby uninstall'
end
task :debug do
  Rake::Task[:bop_debug].invoke
  Rake::Task[:ruby].invoke
end
